@model Eid_AL_Kuwait.Areas.Property.Data.Products.ProductVariation

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Property/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Variations"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductId)
    <div class="mt-3 row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col form-floating">
            @Html.EditorFor(model => model.ProductVariationName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.ProductVariationName)
            @Html.ValidationMessageFor(model => model.ProductVariationName, "", new { @class = "text-danger" })
        </div>
        <div class="col form-floating">
            @Html.EditorFor(model => model.ProductVariationValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.ProductVariationValue)
            @Html.ValidationMessageFor(model => model.ProductVariationValue, "", new { @class = "text-danger" })
        </div>
        <div class="col form-floating">
            @Html.EditorFor(model => model.RetailPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.RetailPrice, htmlAttributes: new { @class = "form-label" })
            @Html.ValidationMessageFor(model => model.RetailPrice, "", new { @class = "text-danger" })
        </div>
        <div class="col form-floating">
            @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.WholeSalePrice, htmlAttributes: new { @class = "form-label" })
            @Html.ValidationMessageFor(model => model.WholeSalePrice, "", new { @class = "text-danger" })
        </div>
        <div class="col form-floating">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", min = 1 } })
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "form-label" })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
        <div class="col-1 form-check form-switch pt-3">
            @Html.CheckBoxFor(model => model.IsInStock, htmlAttributes: new { @class = "form-check-input" })
            @Html.LabelFor(model => model.IsInStock, htmlAttributes: new { @class = "form-check-label" })
        </div>
        <div class="col pt-2">
            <input type="submit" value="Add Variation" class="btn btn-primary" />
        </div>
    </div>
}
<hr />
<div class="mt-3 container">
    <div class="row">
        <div class="col-7" id="VarList">
            @{Html.RenderAction("VariationList_Partial", "Variations", new { id = Model.ProductId });}
            <div class="col" style="text-align:center">
                @Html.ActionLink("Cancel", "Index", "Products", null, htmlAttributes: new { @class = "mt-4 btn btn-primary" })
            </div>
        </div>
        <div class="col">
            @{ Html.RenderAction("ImageUpload_Partial", "Images", new { id = Model.ProductId });}
            <div id="ImgList">
                @{Html.RenderAction("ImageList_Partial", "Images", new { id = Model.ProductId });}
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
    <script>
            function Failed(result) {
                alert("No such variation");
            }
    </script>
}
